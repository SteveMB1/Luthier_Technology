<?php

// Data functions (insert, update, delete, form) for table expenses

// This script and data application were generated by AppGini 5.51
// Download AppGini for free from http://bigprof.com/appgini/download/

function expenses_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('expenses');
	if(!$arrPerm[1]){
		return false;
	}

	$data['category'] = makeSafe($_REQUEST['category']);
		if($data['category'] == empty_lookup_value){ $data['category'] = ''; }
	$data['account'] = makeSafe($_REQUEST['account']);
		if($data['account'] == empty_lookup_value){ $data['account'] = ''; }
	$data['price'] = makeSafe($_REQUEST['price']);
		if($data['price'] == empty_lookup_value){ $data['price'] = ''; }
	$data['decription'] = makeSafe($_REQUEST['decription']);
		if($data['decription'] == empty_lookup_value){ $data['decription'] = ''; }
	$data['date'] = intval($_REQUEST['dateYear']) . '-' . intval($_REQUEST['dateMonth']) . '-' . intval($_REQUEST['dateDay']);
	$data['date'] = parseMySQLDate($data['date'], '1');
	$data['from_account'] = makeSafe($_REQUEST['from_account']);
		if($data['from_account'] == empty_lookup_value){ $data['from_account'] = ''; }
	$data['account_detail'] = makeSafe($_REQUEST['account_detail']);
		if($data['account_detail'] == empty_lookup_value){ $data['account_detail'] = ''; }
	$data['check_number'] = makeSafe($_REQUEST['check_number']);
		if($data['check_number'] == empty_lookup_value){ $data['check_number'] = ''; }
	$data['photo'] = PrepareUploadedFile('photo', 5120000,'jpg|jpeg|gif|png', false, '');
	if($data['photo']) createThumbnail($data['photo'], getThumbnailSpecs('expenses', 'photo', 'tv'));
	if($data['photo']) createThumbnail($data['photo'], getThumbnailSpecs('expenses', 'photo', 'dv'));
	if($data['category']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Category': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['account']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Account / Person': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['price'] == '') $data['price'] = "0.00";
	if($data['price']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Money': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['date']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Date': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['from_account']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Account - Paid from': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}

	/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
	if($_REQUEST['SelectedID']){
		$res = sql("select * from expenses where id='" . makeSafe($_REQUEST['SelectedID']) . "'", $eo);
		if($row = db_fetch_assoc($res)){
			if(!$data['photo']) $data['photo'] = makeSafe($row['photo']);
		}
	}

	// hook: expenses_before_insert
	if(function_exists('expenses_before_insert')){
		$args=array();
		if(!expenses_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `expenses` set       `category`=' . (($data['category'] !== '' && $data['category'] !== NULL) ? "'{$data['category']}'" : 'NULL') . ', `account`=' . (($data['account'] !== '' && $data['account'] !== NULL) ? "'{$data['account']}'" : 'NULL') . ', `price`=' . (($data['price'] !== '' && $data['price'] !== NULL) ? "'{$data['price']}'" : 'NULL') . ', `decription`=' . (($data['decription'] !== '' && $data['decription'] !== NULL) ? "'{$data['decription']}'" : 'NULL') . ', `date`=' . (($data['date'] !== '' && $data['date'] !== NULL) ? "'{$data['date']}'" : 'NULL') . ', `from_account`=' . (($data['from_account'] !== '' && $data['from_account'] !== NULL) ? "'{$data['from_account']}'" : 'NULL') . ', `account_detail`=' . (($data['account_detail'] !== '' && $data['account_detail'] !== NULL) ? "'{$data['account_detail']}'" : 'NULL') . ', `check_number`=' . (($data['check_number'] !== '' && $data['check_number'] !== NULL) ? "'{$data['check_number']}'" : 'NULL') . ', ' . ($data['photo'] != '' ? "`photo`='{$data['photo']}'" : '`photo`=NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"expenses_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: expenses_after_insert
	if(function_exists('expenses_after_insert')){
		$res = sql("select * from `expenses` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!expenses_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	sql("insert ignore into membership_userrecords set tableName='expenses', pkValue='" . makeSafe($recID, false) . "', memberID='" . makeSafe(getLoggedMemberID(), false) . "', dateAdded='" . time() . "', dateUpdated='" . time() . "', groupID='" . getLoggedGroupID() . "'", $eo);

	return $recID;
}

function expenses_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('expenses');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='expenses' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='expenses' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: expenses_before_delete
	if(function_exists('expenses_before_delete')){
		$args=array();
		if(!expenses_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	// delete file stored in the 'photo' field
	$res = sql("select `photo` from `expenses` where `id`='$selected_id'", $eo);
	if($row=@db_fetch_row($res)){
		if($row[0]!=''){
			@unlink(getUploadDir('').$row[0]);
			preg_match('/^[a-z0-9_]+\.(gif|png|jpg|jpeg|jpe)$/i', $row[0], $m);
			$thumbDV=str_replace(".$m[1]ffffgggg", "_dv.$m[1]", $row[0].'ffffgggg');
			$thumbTV=str_replace(".$m[1]ffffgggg", "_tv.$m[1]", $row[0].'ffffgggg');
			@unlink(getUploadDir('').$thumbTV);
			@unlink(getUploadDir('').$thumbDV);
		}
	}

	sql("delete from `expenses` where `id`='$selected_id'", $eo);

	// hook: expenses_after_delete
	if(function_exists('expenses_after_delete')){
		$args=array();
		expenses_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='expenses' and pkValue='$selected_id'", $eo);
}

function expenses_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('expenses');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='expenses' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='expenses' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['category'] = makeSafe($_REQUEST['category']);
		if($data['category'] == empty_lookup_value){ $data['category'] = ''; }
	if($data['category']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Category': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['account'] = makeSafe($_REQUEST['account']);
		if($data['account'] == empty_lookup_value){ $data['account'] = ''; }
	if($data['account']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Account / Person': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['price'] = makeSafe($_REQUEST['price']);
		if($data['price'] == empty_lookup_value){ $data['price'] = ''; }
	if($data['price']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Money': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['decription'] = makeSafe($_REQUEST['decription']);
		if($data['decription'] == empty_lookup_value){ $data['decription'] = ''; }
	$data['date'] = intval($_REQUEST['dateYear']) . '-' . intval($_REQUEST['dateMonth']) . '-' . intval($_REQUEST['dateDay']);
	$data['date'] = parseMySQLDate($data['date'], '1');
	if($data['date']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Date': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['from_account'] = makeSafe($_REQUEST['from_account']);
		if($data['from_account'] == empty_lookup_value){ $data['from_account'] = ''; }
	if($data['from_account']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Account - Paid from': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['account_detail'] = makeSafe($_REQUEST['account_detail']);
		if($data['account_detail'] == empty_lookup_value){ $data['account_detail'] = ''; }
	$data['check_number'] = makeSafe($_REQUEST['check_number']);
		if($data['check_number'] == empty_lookup_value){ $data['check_number'] = ''; }
	$data['selectedID']=makeSafe($selected_id);
	if($_REQUEST['photo_remove'] == 1){
		$data['photo'] = '';
		// delete file from server
		$res = sql("select `photo` from `expenses` where `id`='".makeSafe($selected_id)."'", $eo);
		if($row=@db_fetch_row($res)){
			if($row[0]!=''){
				@unlink(getUploadDir('').$row[0]);
				preg_match('/^[a-z0-9_]+\.(gif|png|jpg|jpeg|jpe)$/i', $row[0], $m);
				$thumbDV=str_replace(".$m[1]ffffgggg", "_dv.$m[1]", $row[0].'ffffgggg');
				$thumbTV=str_replace(".$m[1]ffffgggg", "_tv.$m[1]", $row[0].'ffffgggg');
				@unlink(getUploadDir('').$thumbTV);
				@unlink(getUploadDir('').$thumbDV);
			}
		}
	}else{
		$data['photo'] = PrepareUploadedFile('photo', 5120000, 'jpg|jpeg|gif|png', false, "");
		if($data['photo']) createThumbnail($data['photo'], getThumbnailSpecs('expenses', 'photo', 'tv'));
		if($data['photo']) createThumbnail($data['photo'], getThumbnailSpecs('expenses', 'photo', 'dv'));
		// delete file from server
		if($data['photo'] != ''){
			$res = sql("select `photo` from `expenses` where `id`='".makeSafe($selected_id)."'", $eo);
			if($row=@db_fetch_row($res)){
				if($row[0]!=''){
					@unlink(getUploadDir('').$row[0]);
					preg_match('/^[a-z0-9_]+\.(gif|png|jpg|jpeg|jpe)$/i', $row[0], $m);
					$thumbDV=str_replace(".$m[1]ffffgggg", "_dv.$m[1]", $row[0].'ffffgggg');
					$thumbTV=str_replace(".$m[1]ffffgggg", "_tv.$m[1]", $row[0].'ffffgggg');
					@unlink(getUploadDir('').$thumbTV);
					@unlink(getUploadDir('').$thumbDV);
				}
			}
		}
	}

	// hook: expenses_before_update
	if(function_exists('expenses_before_update')){
		$args=array();
		if(!expenses_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `expenses` set       `category`=' . (($data['category'] !== '' && $data['category'] !== NULL) ? "'{$data['category']}'" : 'NULL') . ', `account`=' . (($data['account'] !== '' && $data['account'] !== NULL) ? "'{$data['account']}'" : 'NULL') . ', `price`=' . (($data['price'] !== '' && $data['price'] !== NULL) ? "'{$data['price']}'" : 'NULL') . ', `decription`=' . (($data['decription'] !== '' && $data['decription'] !== NULL) ? "'{$data['decription']}'" : 'NULL') . ', `date`=' . (($data['date'] !== '' && $data['date'] !== NULL) ? "'{$data['date']}'" : 'NULL') . ', `from_account`=' . (($data['from_account'] !== '' && $data['from_account'] !== NULL) ? "'{$data['from_account']}'" : 'NULL') . ', `account_detail`=' . (($data['account_detail'] !== '' && $data['account_detail'] !== NULL) ? "'{$data['account_detail']}'" : 'NULL') . ', `check_number`=' . (($data['check_number'] !== '' && $data['check_number'] !== NULL) ? "'{$data['check_number']}'" : 'NULL') . ', ' . ($data['photo']!='' ? "`photo`='{$data['photo']}'" : ($_REQUEST['photo_remove'] != 1 ? '`photo`=`photo`' : '`photo`=NULL')) . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="expenses_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: expenses_after_update
	if(function_exists('expenses_after_update')){
		$res = sql("SELECT * FROM `expenses` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!expenses_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='expenses' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function expenses_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('expenses');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}


	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: category
	$combo_category = new Combo;
	$combo_category->ListType = 0;
	$combo_category->MultipleSeparator = ', ';
	$combo_category->ListBoxHeight = 10;
	$combo_category->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/expenses.category.csv')){
		$category_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/expenses.category.csv')));
		$combo_category->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($category_data)));
		$combo_category->ListData = $combo_category->ListItem;
	}else{
		$combo_category->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Advertising and Promotion;;Books and Publications;;Dues and Fees;;Education and Research;;Equipment and Supplies;;Home Office;;Internet;;Meals and Entertainment;;Telephone;;Travel and Transportation;;Uniforms and Gear;;Medical")));
		$combo_category->ListData = $combo_category->ListItem;
	}
	$combo_category->SelectName = 'category';
	$combo_category->AllowNull = false;
	// combobox: date
	$combo_date = new DateCombo;
	$combo_date->DateFormat = "mdy";
	$combo_date->MinYear = 1900;
	$combo_date->MaxYear = 2100;
	$combo_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_date->MonthNames = $Translation['month names'];
	$combo_date->NamePrefix = 'date';
	// combobox: account_detail
	$combo_account_detail = new Combo;
	$combo_account_detail->ListType = 2;
	$combo_account_detail->MultipleSeparator = ', ';
	$combo_account_detail->ListBoxHeight = 10;
	$combo_account_detail->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/expenses.account_detail.csv')){
		$account_detail_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/expenses.account_detail.csv')));
		$combo_account_detail->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($account_detail_data)));
		$combo_account_detail->ListData = $combo_account_detail->ListItem;
	}else{
		$combo_account_detail->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Check;;Credit Card;;Debit Card")));
		$combo_account_detail->ListData = $combo_account_detail->ListItem;
	}
	$combo_account_detail->SelectName = 'account_detail';

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='expenses' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='expenses' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `expenses` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found']);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_category->SelectedData = $row['category'];
		$combo_date->DefaultDate = $row['date'];
		$combo_account_detail->SelectedData = $row['account_detail'];
	}else{
		$combo_category->SelectedText = ( $_REQUEST['FilterField'][1]=='2' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
		$combo_account_detail->SelectedText = ( $_REQUEST['FilterField'][1]=='8' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
	}
	$combo_category->Render();
	$combo_account_detail->Render();

	ob_start();
	?>

	<script>
		// initial lookup values

		jQuery(function() {
		});
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$templateCode = @file_get_contents('./templates/expenses_templateDVP.html');
	}else{
		$templateCode = @file_get_contents('./templates/expenses_templateDV.html');
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Detail View', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($arrPerm[1] && !$selected_id){ // allow insert and no record selected?
		if(!$selected_id) $templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return expenses_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return expenses_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'window.parent.jQuery(\'.modal\').modal(\'hide\'); return false;';
	}else{
		$backAction = '$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode=str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return expenses_validateData();"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#category').replaceWith('<div class=\"form-control-static\" id=\"category\">' + (jQuery('#category').val() || '') + '</div>'); jQuery('#category-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#account').replaceWith('<div class=\"form-control-static\" id=\"account\">' + (jQuery('#account').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#price').replaceWith('<div class=\"form-control-static\" id=\"price\">' + (jQuery('#price').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#decription').replaceWith('<div class=\"form-control-static\" id=\"decription\">' + (jQuery('#decription').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#dateDay, #dateMonth, #dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#from_account').replaceWith('<div class=\"form-control-static\" id=\"from_account\">' + (jQuery('#from_account').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('input[name=account_detail]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=account_detail]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#check_number').replaceWith('<div class=\"form-control-static\" id=\"check_number\">' + (jQuery('#check_number').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#photo').replaceWith('<div class=\"form-control-static\" id=\"photo\">' + (jQuery('#photo').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif(($AllowInsert && !$selected_id) || ($AllowUpdate && $selected_id)){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode=str_replace('<%%COMBO(category)%%>', $combo_category->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(category)%%>', $combo_category->SelectedData, $templateCode);
	$templateCode=str_replace('<%%COMBO(date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_date->GetHTML(true) . '</div>' : $combo_date->GetHTML()), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(date)%%>', $combo_date->GetHTML(true), $templateCode);
	$templateCode=str_replace('<%%COMBO(account_detail)%%>', $combo_account_detail->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(account_detail)%%>', $combo_account_detail->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array();
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode=str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(category)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(account)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(price)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(decription)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(date)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(from_account)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(account_detail)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(check_number)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(photo)%%>', ($noUploads ? '' : '<input type=hidden name=MAX_FILE_SIZE value=5120000>'.$Translation['upload image'].' <input type="file" name="photo" id="photo">'), $templateCode);
	if($AllowUpdate && $row['photo']!=''){
		$templateCode=str_replace('<%%REMOVEFILE(photo)%%>', '<br><input type="checkbox" name="photo_remove" id="photo_remove" value="1"> <label for="photo_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	}else{
		$templateCode=str_replace('<%%REMOVEFILE(photo)%%>', '', $templateCode);
	}

	// process values
	if($selected_id){
		$templateCode=str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(category)%%>', html_attr($row['category']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(category)%%>', urlencode($urow['category']), $templateCode);
		$templateCode=str_replace('<%%VALUE(account)%%>', html_attr($row['account']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(account)%%>', urlencode($urow['account']), $templateCode);
		$templateCode=str_replace('<%%VALUE(price)%%>', html_attr($row['price']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(price)%%>', urlencode($urow['price']), $templateCode);
		$templateCode=str_replace('<%%VALUE(decription)%%>', html_attr($row['decription']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(decription)%%>', urlencode($urow['decription']), $templateCode);
		$templateCode=str_replace('<%%VALUE(date)%%>', @date('m/d/Y', @strtotime(html_attr($row['date']))), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(date)%%>', urlencode(@date('m/d/Y', @strtotime(html_attr($urow['date'])))), $templateCode);
		$templateCode=str_replace('<%%VALUE(from_account)%%>', html_attr($row['from_account']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(from_account)%%>', urlencode($urow['from_account']), $templateCode);
		$templateCode=str_replace('<%%VALUE(account_detail)%%>', html_attr($row['account_detail']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(account_detail)%%>', urlencode($urow['account_detail']), $templateCode);
		$templateCode=str_replace('<%%VALUE(check_number)%%>', html_attr($row['check_number']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(check_number)%%>', urlencode($urow['check_number']), $templateCode);
		$row['photo']=($row['photo']!=''?$row['photo']:'blank.gif');
		$templateCode=str_replace('<%%VALUE(photo)%%>', html_attr($row['photo']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(photo)%%>', urlencode($urow['photo']), $templateCode);
	}else{
		$templateCode=str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(category)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(category)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(account)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(account)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(price)%%>', '0.00', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(price)%%>', urlencode('0.00'), $templateCode);
		$templateCode=str_replace('<%%VALUE(decription)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(decription)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(date)%%>', '1', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(date)%%>', urlencode('1'), $templateCode);
		$templateCode=str_replace('<%%VALUE(from_account)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(from_account)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(account_detail)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(account_detail)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(check_number)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(check_number)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(photo)%%>', 'blank.gif', $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode=str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode=str_replace('<%%', '<!-- ', $templateCode);
	$templateCode=str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	// hook: expenses_dv
	if(function_exists('expenses_dv')){
		$args=array();
		expenses_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>