<?php

// Data functions (insert, update, delete, form) for table inventory

// This script and data application were generated by AppGini 5.51
// Download AppGini for free from http://bigprof.com/appgini/download/

function inventory_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('inventory');
	if(!$arrPerm[1]){
		return false;
	}

	$data['item'] = makeSafe($_REQUEST['item']);
		if($data['item'] == empty_lookup_value){ $data['item'] = ''; }
	$data['status'] = makeSafe($_REQUEST['status']);
		if($data['status'] == empty_lookup_value){ $data['status'] = ''; }
	$data['description'] = br2nl(makeSafe($_REQUEST['description']));
	$data['item_cost'] = makeSafe($_REQUEST['item_cost']);
		if($data['item_cost'] == empty_lookup_value){ $data['item_cost'] = ''; }
	$data['price_high'] = makeSafe($_REQUEST['price_high']);
		if($data['price_high'] == empty_lookup_value){ $data['price_high'] = ''; }
	$data['price_low'] = makeSafe($_REQUEST['price_low']);
		if($data['price_low'] == empty_lookup_value){ $data['price_low'] = ''; }
	$data['item_number'] = makeSafe($_REQUEST['item_number']);
		if($data['item_number'] == empty_lookup_value){ $data['item_number'] = ''; }
	$data['ref_listing'] = makeSafe($_REQUEST['ref_listing']);
		if($data['ref_listing'] == empty_lookup_value){ $data['ref_listing'] = ''; }
	$data['location'] = makeSafe($_REQUEST['location']);
		if($data['location'] == empty_lookup_value){ $data['location'] = ''; }
	$data['inventory_photo'] = PrepareUploadedFile('inventory_photo', 5120000,'jpg|jpeg|gif|png', false, '');
	if($data['inventory_photo']) createThumbnail($data['inventory_photo'], getThumbnailSpecs('inventory', 'inventory_photo', 'tv'));
	if($data['inventory_photo']) createThumbnail($data['inventory_photo'], getThumbnailSpecs('inventory', 'inventory_photo', 'dv'));
	if($data['item_cost'] == '') $data['item_cost'] = "0.00";
	if($data['price_high'] == '') $data['price_high'] = "0.00";
	if($data['price_low'] == '') $data['price_low'] = "0.00";

	/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
	if($_REQUEST['SelectedID']){
		$res = sql("select * from inventory where id='" . makeSafe($_REQUEST['SelectedID']) . "'", $eo);
		if($row = db_fetch_assoc($res)){
			if(!$data['inventory_photo']) $data['inventory_photo'] = makeSafe($row['inventory_photo']);
		}
	}

	// hook: inventory_before_insert
	if(function_exists('inventory_before_insert')){
		$args=array();
		if(!inventory_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `inventory` set       `item`=' . (($data['item'] !== '' && $data['item'] !== NULL) ? "'{$data['item']}'" : 'NULL') . ', `status`=' . (($data['status'] !== '' && $data['status'] !== NULL) ? "'{$data['status']}'" : 'NULL') . ', `description`=' . (($data['description'] !== '' && $data['description'] !== NULL) ? "'{$data['description']}'" : 'NULL') . ', `item_cost`=' . (($data['item_cost'] !== '' && $data['item_cost'] !== NULL) ? "'{$data['item_cost']}'" : 'NULL') . ', `price_high`=' . (($data['price_high'] !== '' && $data['price_high'] !== NULL) ? "'{$data['price_high']}'" : 'NULL') . ', `price_low`=' . (($data['price_low'] !== '' && $data['price_low'] !== NULL) ? "'{$data['price_low']}'" : 'NULL') . ', `item_number`=' . (($data['item_number'] !== '' && $data['item_number'] !== NULL) ? "'{$data['item_number']}'" : 'NULL') . ', `ref_listing`=' . (($data['ref_listing'] !== '' && $data['ref_listing'] !== NULL) ? "'{$data['ref_listing']}'" : 'NULL') . ', ' . ($data['inventory_photo'] != '' ? "`inventory_photo`='{$data['inventory_photo']}'" : '`inventory_photo`=NULL') . ', `location`=' . (($data['location'] !== '' && $data['location'] !== NULL) ? "'{$data['location']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"inventory_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: inventory_after_insert
	if(function_exists('inventory_after_insert')){
		$res = sql("select * from `inventory` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!inventory_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	sql("insert ignore into membership_userrecords set tableName='inventory', pkValue='" . makeSafe($recID, false) . "', memberID='" . makeSafe(getLoggedMemberID(), false) . "', dateAdded='" . time() . "', dateUpdated='" . time() . "', groupID='" . getLoggedGroupID() . "'", $eo);

	return $recID;
}

function inventory_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('inventory');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='inventory' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='inventory' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: inventory_before_delete
	if(function_exists('inventory_before_delete')){
		$args=array();
		if(!inventory_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	// child table: repairs
	$res = sql("select `id` from `inventory` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `repairs` where `item`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "repairs", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "repairs", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='inventory_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='inventory_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: register_items
	$res = sql("select `id` from `inventory` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `register_items` where `item_name`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "register_items", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "register_items", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='inventory_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='inventory_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	sql("delete from `inventory` where `id`='$selected_id'", $eo);

	// hook: inventory_after_delete
	if(function_exists('inventory_after_delete')){
		$args=array();
		inventory_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='inventory' and pkValue='$selected_id'", $eo);
}

function inventory_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('inventory');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='inventory' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='inventory' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['item'] = makeSafe($_REQUEST['item']);
		if($data['item'] == empty_lookup_value){ $data['item'] = ''; }
	$data['status'] = makeSafe($_REQUEST['status']);
		if($data['status'] == empty_lookup_value){ $data['status'] = ''; }
	$data['description'] = br2nl(makeSafe($_REQUEST['description']));
	$data['item_cost'] = makeSafe($_REQUEST['item_cost']);
		if($data['item_cost'] == empty_lookup_value){ $data['item_cost'] = ''; }
	$data['price_high'] = makeSafe($_REQUEST['price_high']);
		if($data['price_high'] == empty_lookup_value){ $data['price_high'] = ''; }
	$data['price_low'] = makeSafe($_REQUEST['price_low']);
		if($data['price_low'] == empty_lookup_value){ $data['price_low'] = ''; }
	$data['item_number'] = makeSafe($_REQUEST['item_number']);
		if($data['item_number'] == empty_lookup_value){ $data['item_number'] = ''; }
	$data['ref_listing'] = makeSafe($_REQUEST['ref_listing']);
		if($data['ref_listing'] == empty_lookup_value){ $data['ref_listing'] = ''; }
	$data['last_update'] = parseCode('Timestamp: <%%editingDateTime%%> | User: <%%editorUsername%%> | IP: <%%editorIP%%>', false);
	$data['location'] = makeSafe($_REQUEST['location']);
		if($data['location'] == empty_lookup_value){ $data['location'] = ''; }
	$data['selectedID']=makeSafe($selected_id);
	if($_REQUEST['inventory_photo_remove'] == 1){
		$data['inventory_photo'] = '';
	}else{
		$data['inventory_photo'] = PrepareUploadedFile('inventory_photo', 5120000, 'jpg|jpeg|gif|png', false, "");
		if($data['inventory_photo']) createThumbnail($data['inventory_photo'], getThumbnailSpecs('inventory', 'inventory_photo', 'tv'));
		if($data['inventory_photo']) createThumbnail($data['inventory_photo'], getThumbnailSpecs('inventory', 'inventory_photo', 'dv'));
	}

	// hook: inventory_before_update
	if(function_exists('inventory_before_update')){
		$args=array();
		if(!inventory_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `inventory` set       `item`=' . (($data['item'] !== '' && $data['item'] !== NULL) ? "'{$data['item']}'" : 'NULL') . ', `status`=' . (($data['status'] !== '' && $data['status'] !== NULL) ? "'{$data['status']}'" : 'NULL') . ', `description`=' . (($data['description'] !== '' && $data['description'] !== NULL) ? "'{$data['description']}'" : 'NULL') . ', `item_cost`=' . (($data['item_cost'] !== '' && $data['item_cost'] !== NULL) ? "'{$data['item_cost']}'" : 'NULL') . ', `price_high`=' . (($data['price_high'] !== '' && $data['price_high'] !== NULL) ? "'{$data['price_high']}'" : 'NULL') . ', `price_low`=' . (($data['price_low'] !== '' && $data['price_low'] !== NULL) ? "'{$data['price_low']}'" : 'NULL') . ', `item_number`=' . (($data['item_number'] !== '' && $data['item_number'] !== NULL) ? "'{$data['item_number']}'" : 'NULL') . ', `ref_listing`=' . (($data['ref_listing'] !== '' && $data['ref_listing'] !== NULL) ? "'{$data['ref_listing']}'" : 'NULL') . ', ' . ($data['inventory_photo']!='' ? "`inventory_photo`='{$data['inventory_photo']}'" : ($_REQUEST['inventory_photo_remove'] != 1 ? '`inventory_photo`=`inventory_photo`' : '`inventory_photo`=NULL')) . ', `last_update`=' . "'{$data['last_update']}'" . ', `location`=' . (($data['location'] !== '' && $data['location'] !== NULL) ? "'{$data['location']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="inventory_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: inventory_after_update
	if(function_exists('inventory_after_update')){
		$res = sql("SELECT * FROM `inventory` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!inventory_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='inventory' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function inventory_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('inventory');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}


	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: status
	$combo_status = new Combo;
	$combo_status->ListType = 0;
	$combo_status->MultipleSeparator = ', ';
	$combo_status->ListBoxHeight = 10;
	$combo_status->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/inventory.status.csv')){
		$status_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/inventory.status.csv')));
		$combo_status->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($status_data)));
		$combo_status->ListData = $combo_status->ListItem;
	}else{
		$combo_status->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Repairs Needed;;Listed;;Waiting to be listed;;Sold;;Preparing-Shipment;;Shipped")));
		$combo_status->ListData = $combo_status->ListItem;
	}
	$combo_status->SelectName = 'status';

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='inventory' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='inventory' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `inventory` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found']);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_status->SelectedData = $row['status'];
	}else{
		$combo_status->SelectedText = ( $_REQUEST['FilterField'][1]=='3' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
	}
	$combo_status->Render();

	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$templateCode = @file_get_contents('./templates/inventory_templateDVP.html');
	}else{
		$templateCode = @file_get_contents('./templates/inventory_templateDV.html');
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Inventory details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($arrPerm[1] && !$selected_id){ // allow insert and no record selected?
		if(!$selected_id) $templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return inventory_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return inventory_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'window.parent.jQuery(\'.modal\').modal(\'hide\'); return false;';
	}else{
		$backAction = '$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode=str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return inventory_validateData();"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#item').replaceWith('<div class=\"form-control-static\" id=\"item\">' + (jQuery('#item').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#status').replaceWith('<div class=\"form-control-static\" id=\"status\">' + (jQuery('#status').val() || '') + '</div>'); jQuery('#status-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#description').replaceWith('<div class=\"form-control-static\" id=\"description\">' + (jQuery('#description').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#item_cost').replaceWith('<div class=\"form-control-static\" id=\"item_cost\">' + (jQuery('#item_cost').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#price_high').replaceWith('<div class=\"form-control-static\" id=\"price_high\">' + (jQuery('#price_high').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#price_low').replaceWith('<div class=\"form-control-static\" id=\"price_low\">' + (jQuery('#price_low').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#item_number').replaceWith('<div class=\"form-control-static\" id=\"item_number\">' + (jQuery('#item_number').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#ref_listing').replaceWith('<div class=\"form-control-static\" id=\"ref_listing\">' + (jQuery('#ref_listing').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#ref_listing, #ref_listing-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#inventory_photo').replaceWith('<div class=\"form-control-static\" id=\"inventory_photo\">' + (jQuery('#inventory_photo').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#location').replaceWith('<div class=\"form-control-static\" id=\"location\">' + (jQuery('#location').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif(($AllowInsert && !$selected_id) || ($AllowUpdate && $selected_id)){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode=str_replace('<%%COMBO(status)%%>', $combo_status->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(status)%%>', $combo_status->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array();
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode=str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(item)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(status)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(description)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(item_cost)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(price_high)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(price_low)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(item_number)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(ref_listing)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(inventory_photo)%%>', ($noUploads ? '' : '<input type=hidden name=MAX_FILE_SIZE value=5120000>'.$Translation['upload image'].' <input type="file" name="inventory_photo" id="inventory_photo">'), $templateCode);
	if($AllowUpdate && $row['inventory_photo']!=''){
		$templateCode=str_replace('<%%REMOVEFILE(inventory_photo)%%>', '<br><input type="checkbox" name="inventory_photo_remove" id="inventory_photo_remove" value="1"> <label for="inventory_photo_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	}else{
		$templateCode=str_replace('<%%REMOVEFILE(inventory_photo)%%>', '', $templateCode);
	}
	$templateCode=str_replace('<%%UPLOADFILE(last_update)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(location)%%>', '', $templateCode);

	// process values
	if($selected_id){
		$templateCode=str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(item)%%>', html_attr($row['item']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(item)%%>', urlencode($urow['item']), $templateCode);
		$templateCode=str_replace('<%%VALUE(status)%%>', html_attr($row['status']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(status)%%>', urlencode($urow['status']), $templateCode);
		if($dvprint){
			$templateCode = str_replace('<%%VALUE(description)%%>', nl2br(html_attr($row['description'])), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(description)%%>', html_attr($row['description']), $templateCode);
		}
		$templateCode=str_replace('<%%URLVALUE(description)%%>', urlencode($urow['description']), $templateCode);
		$templateCode=str_replace('<%%VALUE(item_cost)%%>', html_attr($row['item_cost']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(item_cost)%%>', urlencode($urow['item_cost']), $templateCode);
		$templateCode=str_replace('<%%VALUE(price_high)%%>', html_attr($row['price_high']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(price_high)%%>', urlencode($urow['price_high']), $templateCode);
		$templateCode=str_replace('<%%VALUE(price_low)%%>', html_attr($row['price_low']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(price_low)%%>', urlencode($urow['price_low']), $templateCode);
		$templateCode=str_replace('<%%VALUE(item_number)%%>', html_attr($row['item_number']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(item_number)%%>', urlencode($urow['item_number']), $templateCode);
		$templateCode=str_replace('<%%VALUE(ref_listing)%%>', html_attr($row['ref_listing']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(ref_listing)%%>', urlencode($urow['ref_listing']), $templateCode);
		$row['inventory_photo']=($row['inventory_photo']!=''?$row['inventory_photo']:'blank.gif');
		$templateCode=str_replace('<%%VALUE(inventory_photo)%%>', html_attr($row['inventory_photo']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(inventory_photo)%%>', urlencode($urow['inventory_photo']), $templateCode);
		$templateCode=str_replace('<%%VALUE(last_update)%%>', html_attr($row['last_update']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(last_update)%%>', urlencode($urow['last_update']), $templateCode);
		$templateCode=str_replace('<%%VALUE(location)%%>', html_attr($row['location']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(location)%%>', urlencode($urow['location']), $templateCode);
	}else{
		$templateCode=str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(item)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(item)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(status)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(status)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(description)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(description)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(item_cost)%%>', '0.00', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(item_cost)%%>', urlencode('0.00'), $templateCode);
		$templateCode=str_replace('<%%VALUE(price_high)%%>', '0.00', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(price_high)%%>', urlencode('0.00'), $templateCode);
		$templateCode=str_replace('<%%VALUE(price_low)%%>', '0.00', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(price_low)%%>', urlencode('0.00'), $templateCode);
		$templateCode=str_replace('<%%VALUE(item_number)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(item_number)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(ref_listing)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(ref_listing)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(inventory_photo)%%>', 'blank.gif', $templateCode);
		$templateCode=str_replace('<%%VALUE(last_update)%%>', 'Timestamp: <%%editingDateTime%%> | User: <%%editorUsername%%> | IP: <%%editorIP%%>', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(last_update)%%>', urlencode('Timestamp: <%%editingDateTime%%> | User: <%%editorUsername%%> | IP: <%%editorIP%%>'), $templateCode);
		$templateCode=str_replace('<%%VALUE(location)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(location)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode=str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode=str_replace('<%%', '<!-- ', $templateCode);
	$templateCode=str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
			$templateCode.="\n\tif(document.getElementById('ref_listingEdit')){ document.getElementById('ref_listingEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('ref_listingEditLink')){ document.getElementById('ref_listingEditLink').style.display='none'; }";
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	// hook: inventory_dv
	if(function_exists('inventory_dv')){
		$args=array();
		inventory_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>